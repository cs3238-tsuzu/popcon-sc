package swagger

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

/*PostContestsGetIDOK Successful response

swagger:response postContestsGetIdOK
*/
type PostContestsGetIDOK struct {

	/*Listen Address
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPostContestsGetIDOK creates PostContestsGetIDOK with default headers values
func NewPostContestsGetIDOK() *PostContestsGetIDOK {
	return &PostContestsGetIDOK{}
}

// WithPayload adds the payload to the post contests get Id o k response
func (o *PostContestsGetIDOK) WithPayload(payload string) *PostContestsGetIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post contests get Id o k response
func (o *PostContestsGetIDOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostContestsGetIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*PostContestsGetIDBadRequest Bad request

swagger:response postContestsGetIdBadRequest
*/
type PostContestsGetIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPostContestsGetIDBadRequest creates PostContestsGetIDBadRequest with default headers values
func NewPostContestsGetIDBadRequest() *PostContestsGetIDBadRequest {
	return &PostContestsGetIDBadRequest{}
}

// WithPayload adds the payload to the post contests get Id bad request response
func (o *PostContestsGetIDBadRequest) WithPayload(payload string) *PostContestsGetIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post contests get Id bad request response
func (o *PostContestsGetIDBadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostContestsGetIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*PostContestsGetIDInternalServerError Internal server error

swagger:response postContestsGetIdInternalServerError
*/
type PostContestsGetIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPostContestsGetIDInternalServerError creates PostContestsGetIDInternalServerError with default headers values
func NewPostContestsGetIDInternalServerError() *PostContestsGetIDInternalServerError {
	return &PostContestsGetIDInternalServerError{}
}

// WithPayload adds the payload to the post contests get Id internal server error response
func (o *PostContestsGetIDInternalServerError) WithPayload(payload string) *PostContestsGetIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post contests get Id internal server error response
func (o *PostContestsGetIDInternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostContestsGetIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
